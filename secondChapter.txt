想java所有的关键字都是小写 没有大写。
java没有全局变量的概念。
成员变量:类体里面申明的变量叫成员变量。
凡是在大括号里面申明的变量，出了大括号就不认识他了。
boolean类型:false 和 true  布尔类型只有两个值 c语音中非零为假 零为真
char类型：但括号括起来的单个字符。 java字符采用unicode编码。每个字符占两个字节因此可以用十六进制编码来表示。
国标：gb2312
Unicode是一种统一了全世界所有的文字。java采用了unicode编码。

byte：1个字节 
short：2个字节
int:4字节
long：8字节
java里面所有的数都是带符号的。因此没有无符号数。java个整数类型有固定的表数范围和字段长度。c语言不能移植的原因是不同的平台下每种数据类型所占的位数不同。

java语言整形常量的三种表示形式：
十进制整数：如：12，-314,0  
八进制：
十六进制：

java语言的整形常量默认为int型，申明long型常量可以后加L或l
如：long memeda = 4444444444444;//不加L是有问题的。
正确的形式是：long memeda = 4444444444L; 一般建议用大写L

与整数类型类似，java浮点类型有固定的表述范围，不受平台影响：
float：4字节 小数点7位是精确的
double：8字节 小数点15是精确地
double d = 12345.5;//正确
float f = 12.3f //必须加F 否则会出错。

总结起来就是：
定义long类型的变量时：long a = 10000000000000L;一定要加L。可大写可小写L
定义float类型的变量时： float = 3.123f;一定要加f,记住是小写f


<************************>
基础数据类型转换：
boolean类型不可以转换成其他的数据类型
其他类型不可以转换成boolean类型。
混合运算时的规则：容量小的类型自动转换为容量大的数据类型。是容量决定的。
byte < short < char < int <long <float <double
如果按照字节数long占的字节数多，但是float容量大。
byte,short，char之间互相转换，他们三者在计算时首先会转换成int类型。
容量大的数据类型转换为容量小的数据类型时，要加上强制转换符，但可能造成精度降低或溢出，使用时要小心。
有多种类型的数据混合运算时，系统首先自动的将所有的数据转换成大的那一种数据，然后在计算。
Infinity:无穷大
注意：可以将整形常量直接赋值给byte，short，char等类型变量，而不需要进行强制类型转换，只要不超出其表述范围。
<**************************>

<********************************>
程序的格式：比算法重要.程序员的门面。--把程序写得好看
1、大括号对齐。左大括号所在行的最左边和右括号对齐。
2、缩进。tab缩进。或者三个空格缩进。碰到左大括号缩进。
3、 程序块之间加空行。
4、并排语句之间加空格。
5、运算符之间加空格。
6、成对编程。
程序格式的原则：让别人看的清楚和舒服。
<********************************>

<************************>
算数运算符：
关系运算符：
逻辑运算符：
位运算符：
赋值运算符：

逻辑运算符：
^:只要A^B 只要AB不一样就是true
！
&
|
……
&&：与&差不多，一旦满足条件后，第二个操作数不再计算
||：与|差不多，一旦满足条件，第二个操作数不再计算。
逻辑运算符和按位运算符是一样的。
只不过是同个运算符的不同场合的应用。

+号运算符：该运算符两侧的操作数只要有一个是字符串String,系统会装换成String然后再做连接。

System.out.println();
当进行打印的时候，如论任何类型，都自动转换为string进行打印。
<************************>

<************************>
表达式： 
<************************>

<************************>
语句：
1、条件语句：
2、循环语句：
	for(表达式1; 表达式2； 表达式3)
	while 语句：
	while和do while唯一不同的情况是：while循环体可能一次都不会执行，do while一定会执行一次。

demoWhile : while(i < 10) {
	
}

demoDoWhile: 
do {
	
}while();//注意，这里有分号，切记。

同一个变量作用里面，同一变量只需要申明一次，不要多次申明。
3、分支语句：
<************************>


<************************>
break：用于终止某个语句块的执行，用在循环语句体中，可以强行退出循环
continue:跳过某次循环，继续下一次循环过程。
<************************>

<************************>
switch(i) i可以是byte short int char类型；不能是表达式。
do {} while();有逗号 别忘了

小心case穿透；一般用break
一段有用的demo:
public class TestDemo {
	public static void main(String[] args) {
		int i=8;
		switch(i) {
			case 8:
			case 2:
			case 1:
				System.out.println("C");
				break;
			case 8:
				System.out.println("D");
			default:
			System.out.println("Error");
		}
	}
}
当i等于1或2或8时，输出C。

java中Switch语句只能探测int类型值。
<************************>

<************************>
方法：C语言叫函数，java叫方法。
方法的本质是增强程序的复用性。
方法是用来完成特定功能的代码片段。
方法：
1、形式参数：用于接收外界输入的数据。
2、实参：调用方法时实际传给方法的数据
3、返回值：
4、返回值类型： 

<************************>
方法的demo:

public class Demo {
	/*主函数*/
	public static void main(String[] args) {
		m();
		m1(2);
		m2(2,3);
		System.out.println("Hello World");
	}

	public static void m1() {
	//return
	System.out.println("ok");
	System.out.println("Hello");
	}

	public static void m2(int i) {
	//return
	System.out.println("ok");
	System.out.println(i);
	}

	public static void m3(int i, int j) {
	//return
	System.out.println("ok");
	System.out.println("Hello");
	}

	public static int m3(int i, int j) {
	//return
		return i>j ? i : j;
	}
}
方法执行值传递的原则
java方法：基础类型传递的是改数据本身；引用类型传递的是对象的引用，不是对象本身。



总复习：
1、学程序最快的方法是看例子程序
2、局部变量放在stack里面。


