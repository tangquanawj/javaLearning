面向对象编程：需要长时间的淬炼。90%的是需要记住。

面向过程:在方法上复用。
面向过程：在类和方法上复用。
面向对象更加强调运用人类在日常的思维逻辑中经常采用的思想方法和类。
继承关系：
聚合关系：
实现关系：
多态：

对象是java程序的核心
java可以看成是静态属性和动态属性的封装体。
JDK提供了很多类。编程人员也可定义自已的类。
成员变量 属性  
方法    函数

为什么要用对象？
面向对象更加容易使我们达到这些年来苦苦追求的境界。
Reusable重用性
Extensibility扩展性
面向组件的编程：比面向对象还高一些的层次。

*********************************************
java类的定义：
用class关键字定义一个类：例如：
class Person {
	//成员变量
	private int id;
	private int age = 20;
	//方法定义
	public int getAge() {
		return age;
	}
	public void setAge(int i) {
		age = i;
	}
	public void setId() {

	}
}

java里面的变量：申明 赋值 使用
成员变量和局部变量的重要区别：定义成员变量的时候可以初始化，也可以不初始化
因为系统自定对其初始化。
默认初始化表：
byte   0
short   0
int   0
long  0L
char  "\u0000"
float 0.0F
double 0.0D
boolean false
所有引用类型   null

************************************************
java除了基本类型之外的变量类型都称之为引用类型。
java 中的对象都是通过引用调用的。
String s;
s = new String("Hello");
new出来的东西装在(heap)堆内存里面。引用类型全是指针。
javac：编译期间
java ：运行期间
对象创建的规则：
1、必须使用关键字new创建对象
2、使用对象.成员变量来引用对象的成员变量。
3、使用对象.方法来调用对象的方法
4、同一类的每一个对象有不同的成员变量存储空间。
5、同一类的每个对象共享该类的方法。方法只有执行的时候才分配空间。
*****************************************************
构造方法：(构造函数)：和类名字方法，且不能有返回值。
例如：
public class Demo {
	int id;
	int age = 20;
	Demo(int _id, int _age){
		id = _id;
		age = _age;
	}
}
规则：和类名一样不能有返回值，甚至连不能写void。
构造方法的作用：用来初始化对象。
Demo demo = new Demo(1,25);
1、使用new+构造方法  创建一个新的对象
方法调用完之后，方法的内存释放。
当没有指定构造函数的时候，编译器默认自动添加构造方法。类成员变量默认初始值为0。

***************************
类名的首字母应该大写
变量名和方法的名字首字母应该小写。
运用驼峰式标识。你懂的！。
*****************************************
函数重载和内存解析：
函数重载：函数名相同，形式参数不同。和c++的差不多。
构造方法也可以构成重载。
非静态方法(方法前面没有static关键字)是针对每个对象进行调用。