Java中的类：可以看成Java对象的模板。
public class Dog {
	String breed;
	int age;
	String color;
	void barking(){
	}
	
	void hungry(){
	}
	
	void sleeping(){
	}
}
一个类可以包含以下类型变量：
1、局部变量：在方法、构造方法或者语句块中定义的变量被称为局部变量。变量声明和初始化都是在方法中，方法结束后，变量就会自动销毁。
2、成员变量：成员变量是定义在类中，方法体之外的变量。这种变量在创建对象的时候实例化。成员变量可以被类中方法、构造方法和特定类的语句块访问。
3、类变量：类变量也声明在类中，方法体之外，但必须声明为static类型。

创建对象：
对象是根据类创建的。在java中，使用关键字new来创建一个新的对象。创建对象需要以下三步：
1、声明：声明一个对象，包括对象名称和对象类型
2、实例化：使用关键字new来创建一个对象。
3、初始化:使用new创建对象时，会调用构造方法初始化对象


源文件声明规则：
1、一个源文件中只能有一个public类
2、一个源文件可以有多个非public类
3、源文件的名称应该和public类的类名保持一致。例如：源文件中public类的类名是Employee，那么源文件应该命名为Employee.java。
4、如果一个类定义在某个包中，那么package语句应该在源文件的首行。
5、如果源文件包含import语句，那么应该放在package语句和类定义之间。如果没有package语句，那么import语句应该在源文件中最前面。
6、import语句和package语句对源文件中定义的所有类都有效。在同一源文件中，不能给不同的类不同的包声明。

Java包：
包主要用来对类和接口进行分类。当开发Java程序时，可能编写成百上千的类，因此很有必要对类和接口进行分类。

Import语句：在Java中，如果给出一个完整的限定名，包括包名、类名，那么Java编译器就可以很容易地定位到源代码或者类。Import语句就是用来提供一个合理的路径，使得编译器可以找到某个类。
例如，下面的命令行将会命令编译器载入java_installation/java/io路径下的所有类
import java.io.*;
